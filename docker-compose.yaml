version: '3.9'
services:
    nginx:
        build:
            context: .
            dockerfile: ./docker/images/nginx/Dockerfile
        container_name: nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./app:/var/www/app:delegated
            - ./storage/logs/nginx:/var/log/nginx
            - ./docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./docker/config/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
        links:
            - php
        networks:
            - internal
    php:
        build:
            context: .
            dockerfile: ./docker/images/php/Dockerfile
            args: [ "APP_ENV=${APP_ENV}" ]
        container_name: php
        restart: always
        ports:
            - "9000:9000"
        volumes:
            - ./app:/var/www/app:delegated
        environment:
            - APP_ENV=${APP_ENV}
        networks:
            - internal
        depends_on:
            - database
    database:
        container_name: database
        image: postgres
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            PGDATA: ${PGDATA}
        volumes:
            - ./storage/database/postgresql/data:/var/lib/postgresql/data
            - ./docker/config/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '2'
                    memory: 4G
        networks:
            - internal
    adminer:
        image: adminer
        restart: always
        links:
            - database:database
        ports:
            - 8080:8080
        networks:
            - internal
        depends_on:
            - database
networks:
    internal:
        driver: bridge
